server {
    listen 80;
    server_name localhost;

    # 页面只允许在同源的 iframe 框架中显示；
    add_header X-Frame-Options "SAMEORIGIN" always;

    # 限制了可以嵌入当前页面的外部页面（例如通过 iframe），仅允许同源的页面嵌入。
    add_header Content-Security-Policy "default-src 'self' http://* https://* ws://* wss://* data://* blob://* 'unsafe-inline' 'unsafe-eval'; frame-ancestors 'self';" always;

    # 启用浏览器的内置跨站脚本（XSS）过滤器。当设置为 "1; mode=block" 时，如果浏览器检测到潜在的 XSS 攻击，它将阻止页面加载。
    add_header X-XSS-Protection "1; mode=block" always;

    # 这个响应头阻止浏览器对资源执行 MIME 类型嗅探。这有助于防止攻击者利用错误配置的 MIME 类型来执行 XSS 攻击。
    add_header X-Content-Type-Options "nosniff" always;

    # 当从 HTTPS 到 HTTP 的导航发生时，将不会发送 Referer 头。但从 HTTP 到 HTTPS 或同一协议间的导航仍然会发送 Referer 头。
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # 强制浏览器只能通过 HTTPS 访问站点
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # gzip
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/html text/plain text/css text/xml application/json application/javascript image/svg+xml;

    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        client_max_body_size 2048m;
        try_files $uri $uri/ /index.html;
    }
}
